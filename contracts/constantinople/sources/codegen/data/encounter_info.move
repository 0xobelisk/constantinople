  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module constantinople::encounter_info {

  use std::ascii::String;

  public struct EncounterInfo has copy, drop, store {
    monster: address,
    catch_attempts: u64,
  }

  public fun new(monster: address, catch_attempts: u64): EncounterInfo {
    EncounterInfo {
                                   monster,catch_attempts
                               }
  }

  public fun get(self: &EncounterInfo): (address,u64) {
    (self.monster,self.catch_attempts)
  }

  public fun get_monster(self: &EncounterInfo): address {
    self.monster
  }

  public fun get_catch_attempts(self: &EncounterInfo): u64 {
    self.catch_attempts
  }

  public(package) fun set_monster(self: &mut EncounterInfo, monster: address) {
    self.monster = monster;
  }

  public(package) fun set_catch_attempts(self: &mut EncounterInfo, catch_attempts: u64) {
    self.catch_attempts = catch_attempts;
  }

  public(package) fun set(self: &mut EncounterInfo, monster: address, catch_attempts: u64) {
    self.monster = monster;
    self.catch_attempts = catch_attempts;
  }
}
